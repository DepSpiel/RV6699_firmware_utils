#!/bin/sh
PATH=/usr/local/bin:${PATH}:/sbin:/bin:/usr/sbin:/usr/bin:/mnt/rootfs/bin
LD_LIBRARY_PATH=/lib:/usr/lib:/mnt/rootfs/lib:${LD_LIBRARY_PATH}
export PATH LD_LIBRARY_PATH

_changeSetting() {
	if [ "`cmld_client get $1|cut -d' ' -f3`" != "$2" ]; then
		echo "$1 != $2, fixing" >&2
		cmld_client set $1=$2
		return 1
	else
		echo "$1 == $2, ok" >&2
		return 0
	fi
}

_mountOpt() {
	for _dev in /sys/block/sd*/sd*; do
		echo "Checking ${_dev} for opt..." >&2
		_dev=`echo ${_dev}|cut -d/ -f5` # Sercomm lacks basename
		_i=0
		while [ "${_i}" -le 10 ]; do
			mpoint=`egrep "^/dev/${_dev}" /proc/self/mounts|cut -d" " -f2`
			if [ -n "${mpoint}" -a -d "${mpoint}" ]; then
				if [ -d "${mpoint}/opt" -a -f "${mpoint}/.mount-opt" ]; then
					echo "opt is ${_dev} at ${mpoint}" >&2
					mount --rbind ${mpoint}/opt /opt
					mkdir -p /opt/logs
					exec > /opt/logs/startup.log 2>&1
					return 0
				else
					echo "No opt on ${_dev} at ${mpoint}" >&2
					break
				fi
			else
				echo "Waiting for ${_dev} mount (i=${_i})" >&2
				_i=`expr ${_i} + 1` # Sercomm lacks $(())
			fi
		done
	done
}

_addVlan() {
	echo "Adding vlan $2 to interface $1" >&2
	vlanctl --if-create-name $1 $1.$2
	vlanctl --if $1 --rx --tags 1 --filter-vid $2 1 --pop-tag \
		--set-rxif $1.$2 --rule-type 0 --rule-append
	vlanctl --if $1 --tx --tags 0 --filter-txif $1.$2 --push-tag \
		--set-vid 3 0 --rule-type 0 --rule-append
	vlanctl --if $1 --set-if-mode-rg
	ifconfig $1 up
	ifconfig $1.$2 up
}

_addBridge() {
	brctl addbr $1
	brctl stp $1 off
	brctl setfd $1 0
	ifconfig $1 up
}

# mount opt and start logging
_mountOpt

# start tinysshd if enabled
if [ -f "/opt/ssh/.ssh/authorized_keys" ]; then
	echo "Starting tinysshd..." >&2
	tinysshd-makekey /opt/ssh/hostkey # will not overwrite existing key
	/usr/local/bin/busybox start-stop-daemon -S -x /usr/local/bin/busybox \
		-p /var/run/tinysshd.pid -m -b -- tcpsvd 0 2022 \
		/usr/local/bin/tinysshd /opt/ssh/hostkey
fi

# wait for configuration load
_i=0
while [ ! -f /tmp/config/.p ]; do
	echo "Waiting for modem configuration (i=${_i})" >&2
	sleep 1
	_i=`expr ${_i} + 1`
	if [ "${_i}" -gt 10 ]; then
		echo "Giving up..." >&2
		break
	fi
done


# Enable shell and elevate permissions
_i=0
_changeSetting InternetGatewayDevice.X_SC_Management.ShellEnable 1
_i=`expr ${_i} + $?`
_changeSetting InternetGatewayDevice.X_SC_Management.LoginAccount.2.Group admin
_i=`expr ${_i} + $?`

# save if we changed anything
if [ "${_i}" -gt 0 ]; then
	cmld_client save
fi

# start ZTE bridge on eth0 if configured
_Type=`cmld_client get InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.ConnectionType|cut -d" " -f3`
if [ "${_Type}" = "IP_Bridged" ]; then
	gponif -a wan0 -g 1
	gponif -a wan1 -g 1

	vlanctl --if-create-name wan0 rwan0.3
	vlanctl --if wan0 --rx --tags 1 --filter-vid 3 1 --pop-tag \
		--set-rxif  rwan0.3 --rule-type 0 --rule-append
	vlanctl --if wan0 --tx --tags 0 --filter-txif  rwan0.3 --push-tag --set-vid\
		3 0 --set-pbits 0 0 --set-skb-mark-port 2 --rule-type 0 --rule-append

	vlanctl --if-create-name wan1 rwan1.5
	vlanctl --if wan1 --rx --tags 1 --filter-vid 5 1 --pop-tag \
		--set-rxif  rwan1.5 --rule-type 0 --rule-append
	vlanctl --if wan1 --tx --tags 0 --filter-txif  rwan1.5 --push-tag --set-vid\
		3 0 --set-pbits 0 0 --set-skb-mark-port 2 --rule-type 0 --rule-append

	ifconfig wan0 up
	ifconfig wan1 up
	ifconfig rwan0.3 up
	ifconfig rwan1.5 up

	_addVlan eth0 3
	_addVlan eth0 5
	_addVlan eth0 8

	_addBridge br-data
	_addBridge br-sip

	brctl addif br-data rwan0.3
	brctl addif br-data eth0.3

	brctl addif br-sip rwan1.5
	brctl addif br-sip eth0.5

	brctl addif brg0 eth0.8

	ethswctl -c unibridgemode -v 1 -p 0
	ethswctl -c univlanaction -v 1 -p 0
fi

# start /opt scripts if present
if [ -x /opt/rc.startup ]; then
	PATH=/opt/bin:/opt/sbin:$PATH
	export PATH
	/opt/rc.startup
fi

